<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:dd="clr-namespace:Ava.SocketTool.ViewModels"
             xmlns:dataTemplate="clr-namespace:Ava.SocketTool.DataTemplate"
             xmlns:model="clr-namespace:Ava.SocketTool.Models"
             xmlns:cv="clr-namespace:Ava.SocketTool.Convert"
             d:DataContext="{x:Static dd:DesignData.ExampleHandleViewModel}"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Name="Control"
             x:Class="Ava.SocketTool.Views.Page.HandleView">
    <UserControl.Styles>
        <Style Selector="TextBlock.Start">
            <Setter Property="Text" Value="监听中" />
        </Style>
        <Style Selector="TextBlock.UnStart">
            <Setter Property="Text" Value="已停止" />
        </Style>

        <Style Selector="TextBlock.Connected">
            <Setter Property="Text" Value="已连接" />
        </Style>
        <Style Selector="TextBlock.UnConnected">
            <Setter Property="Text" Value="已断开" />
        </Style>
    </UserControl.Styles>

    <UserControl.DataTemplates>
        <dataTemplate:SocketTreeModelTemplateSelector>
            <!-- Tcp/Udp Server Node -->
            <DataTemplate x:Key="Server" DataType="model:SocketTreeModel">
                <Grid RowDefinitions="*,*">
                    <TextBlock Margin="0 5"
                               Classes.Success="{Binding IsRun}"
                               Classes.Start="{Binding IsRun}"
                               Classes.Danger="{Binding !IsRun}"
                               Classes.UnStart="{Binding !IsRun}" />

                    <Grid Grid.Row="1" ColumnDefinitions="*,*">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <Button Content="启动监听" Classes="Primary" FontSize="10"
                                    Command="{Binding #Control.DataContext.StartListenCommand}"
                                    IsEnabled="{Binding !IsRun}" />
                            <Button Content="停止监听" Classes="Danger" FontSize="10"
                                    Command="{Binding #Control.DataContext.StopListenCommand}"
                                    IsEnabled="{Binding IsRun}" />
                        </StackPanel>

                        <TextBlock Grid.Column="1" VerticalAlignment="Center">
                            <Run Text="本地端口：" />
                            <Run Text="{Binding LocalEndPoint.Port}" />
                        </TextBlock>
                    </Grid>
                </Grid>
            </DataTemplate>

            <!-- Tcp Client Node -->
            <DataTemplate x:Key="TcpClient" DataType="model:SocketTreeModel">
                <Grid ColumnDefinitions="*,*,*">

                    <Grid RowDefinitions="*,*">
                        <TextBlock Margin="0 5"
                                   Classes.Success="{Binding IsRun}"
                                   Classes.Connected="{Binding IsRun}"
                                   Classes.Danger="{Binding !IsRun}"
                                   Classes.UnConnected="{Binding !IsRun}" />

                        <StackPanel Orientation="Horizontal" Spacing="10" Grid.Row="1">
                            <Button Content="连接" Classes="Primary" FontSize="10"
                                    Command="{Binding #Control.DataContext.ConnectCommand}"
                                    IsEnabled="{Binding !IsRun}"
                                    IsVisible="{Binding SessionId,Converter={x:Static StringConverters.IsNullOrEmpty}}"/>
                            <Button Content="断开" Classes="Danger" FontSize="10"
                                    Command="{Binding #Control.DataContext.CloseCommand}"
                                    IsEnabled="{Binding IsRun}" />
                        </StackPanel>
                    </Grid>

                    <TextBlock Grid.Column="1">
                        <Run Text="对方IP:"></Run>
                        <Run Text="{Binding RemoteEndPoint.Address,Converter={x:Static cv:IpAddressToIpConverter.Instance}}"></Run>
                    </TextBlock>

                    <Grid Grid.Column="2" RowDefinitions="*,*">
                        <TextBlock>
                            <Run Text="对方端口：" />
                            <Run Text="{Binding RemoteEndPoint.Port}" />
                        </TextBlock>

                        <TextBlock Grid.Row="1">
                            <Run Text="本地端口：" />
                            <Run Text="{Binding LocalEndPoint.Port}" />
                        </TextBlock>
                    </Grid>

                </Grid>
            </DataTemplate>
            
             <!-- Udp Client Node -->
            <DataTemplate x:Key="UdpClient" DataType="model:SocketTreeModel">
                <Grid ColumnDefinitions="*,*,*">

                    <TextBlock Grid.Column="1">
                        <Run Text="对方IP:"></Run>
                        <Run Text="{Binding RemoteEndPoint.Address,Converter={x:Static cv:IpAddressToIpConverter.Instance}}"></Run>
                    </TextBlock>

                    <Grid Grid.Column="2" RowDefinitions="*,*">
                        <TextBlock>
                            <Run Text="对方端口：" />
                            <Run Text="{Binding RemoteEndPoint.Port}" />
                        </TextBlock>

                        <!-- <TextBlock Grid.Row="1"> -->
                        <!--     <Run Text="本地端口：" /> -->
                        <!--     <Run Text="{Binding LocalEndPoint.Port}" /> -->
                        <!-- </TextBlock> -->
                    </Grid>

                </Grid>
            </DataTemplate>
        </dataTemplate:SocketTreeModelTemplateSelector>
    </UserControl.DataTemplates>


    <Grid RowDefinitions="Auto,2*,2.5*,0.5*">
        <HeaderedContentControl Grid.Row="0" Theme="{DynamicResource GroupBox}" Header="Socket状态">
            <ContentControl Content="{Binding CurrentSelectModel}" />
        </HeaderedContentControl>

        <HeaderedContentControl Grid.Row="1" Theme="{DynamicResource GroupBox}" Header="数据接收及提示窗口"
                                Margin="0 5 0 0">
            <TextBox TextWrapping="Wrap" AcceptsReturn="True" VerticalContentAlignment="Top"
                     Text="{Binding CurrentSelectModel.ReceiveMessage}" TextChanged="TextBox_OnTextChanged" />
        </HeaderedContentControl>

        <Grid Grid.Row="2" ColumnDefinitions="2*,*">
            <HeaderedContentControl Grid.Column="0" Theme="{DynamicResource GroupBox}" Header="数据发送窗口"
                                    Margin="0 5 0 0">
                <TextBox TextWrapping="Wrap" AcceptsReturn="True" VerticalContentAlignment="Top"
                         Text="{Binding CurrentSelectModel.SendMessage}" />
            </HeaderedContentControl>

            <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center">
                <Button Content="发送数据" Margin="0 30 0 0" Command="{Binding SendCommand}" IsEnabled="{Binding CurrentSelectModel.IsRun}" />
                <TextBlock Text="重复发送次数" Margin="0 20 0 0" />
                <ComboBox Width="150" SelectedIndex="0" 
                          SelectedItem="{Binding SendNumber}" ItemsSource="{Binding SendNumbers}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

            </StackPanel>
        </Grid>
    </Grid>
</UserControl>